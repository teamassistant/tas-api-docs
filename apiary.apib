FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Teamassistant (TAS)

REST Api is a complex API for managing entities of TAS and controlling workflows.

## Retrieving Lists
You can pass parameters for sorting and filtering.

### Additional parameters

    + Parameters
        + offset: 0 (number, optional) 
            - The number of items to skip before returning anything.
        + limit: 100 (number, optional) - (number, optional) 
            - The number of returned items.
        + filter: (string, optional) 
            - columnName<like>value
            - (<eq>|<ne>|<gt>|<lt>|<ge>|<le>|<like>|<nlike>)(<and|or>)
        + order: columnName
        + sort: asc|desc

## Login [/authenticate]

### Authenticate [POST]

+ Request Login (application/json)

        {
            "username": "yourId",
            "password": "yourPass",
            "grant_type": "password"
        }

+ Response 200 (application/json; charset=utf-8)

        {
            "access_token": "0e26a1594ae080b7ddacd0bc57daa91f",
            "token_type": "Bearer",
            "refresh_token": "0ncD5zVZOSDtCfarxg6kFXJ6oR7G4QyZqZbkI3AwJPHVbSazDjBBmVDI1PQdvAei",
            "expires_in": 72000,
            "tokenValidTo": "2016-10-06T11:47:08.092Z",
            "refreshTokenValidTo": "2017-10-05T15:47:08.092Z"
        }

### Logout [POST /logout]

+ Request Login

    + Headers
    
                Content-type: application/json
                Authorization: Bearer 0d4a227664de9e38eba9ff1bb03d6bf5
    + Body    
    
            {   
            }   
+ Response 200 (application/json; charset=utf-8)

        {
            1
        }
        
## Task [/tasks]

### All Tasks [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                   "tlsu1is_manager": null
        "tlsugis_manager": null
        "itask_type": "S"
        "itask_subprocess_iproc_id": -1
        "ttask_id": 1
        "org_id": "1"
        "iproc_id": 1
        "itask_name": "test1"
        "itask_is_iproc_id": null
        "itask_description": "Task 1"
        "itask_status": "A"
        "itask_due_date_start": null
        "itask_due_date_finish": null
        "itask_actual_date_start": "2016-10-31T11:44:46.000Z"
        "itask_actual_date_finish": null
        "itask_auto_start": "N"
        "itask_user_id": 8
        "itask_finished_by_user_id": null
        "itask_assesment_role_id": null
        "itask_assesment_hierarchy": "G"
        "itask_assesment_method": "T"
        "itask_assesment_user_id": null
        "itask_assesment_orgstr_id": null
        "itask_assesment_orgstr_cnst": null
        "itask_petri_net_input": 1
        "itask_due_offset": null
        "itask_duration": null
        "itask_sufficient_end": "N"
        "itask_disc_flag": "N"
        "itask_multiinstance_flag": "N"
        "itask_duty": "Y"
        "itask_comment": null
        "iproc_status": "A"
        "user_name": "Apac Arnost"
        "iproc_owner_full_name": "Apac Arnost"
        "itask_assesment_user": " "
        "solver_user_full_name": "Apac Arnost"
        "exec_recalc": 0
        "iproc_name": "Edit"
        "iproc_priority": "M"
        "iproc_main_iproc_id": -1
        "tproc_name": "testTPb11"
        "guarant_id": null
        "c_solve": 1
        "c_take": 0
        "c_handover": 1
        "c_add": 1
        "c_due": 0
        "id": 1
        "meta": {
        "href": "/tasks/1"
                    }
                }
            ]
        }
 
### Tasks With Special Condition [GET /tasks/{+type}]

    + Parameters
        + type (mine|to-assign|to-assign-dues|to-pull|done)

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "itask_name": "Example of task",
                    "iproc_name": "Case nr.1",
                    "iproc_owner_full_name": "Tomáš Jirsa",
                    "solver_user_full_name": "Tomáš Jirsa",
                    "iproc_owner_user_id": "122",
                    "itask_actual_date_start": "2015-09-01T12:44:03Z",
                    "itask_due_date_finish": "2015-09-11T10:44:03Z",
                    "itask_comment": "just a dummy comment",
                    "meta": { "href": "/task/1211" }
                }
            ]
        }
        
## Get Task [GET /tasks/{taskId}]

+ Response 200 (application/json; charset=utf-8)

        {
        "tlsu1is_manager": null
        "tlsugis_manager": null
        "itask_type": "S"
        "itask_subprocess_iproc_id": -1
        "ttask_id": 1
        "org_id": "1"
        "iproc_id": 1
        "itask_name": "test1"
        "itask_is_iproc_id": null
        "itask_description": "Task 1"
        "itask_status": "A"
        "itask_due_date_start": null
        "itask_due_date_finish": null
        "itask_actual_date_start": "2016-10-31T11:44:46.000Z"
        "itask_actual_date_finish": null
        "itask_auto_start": "N"
        "itask_user_id": 8
        "itask_finished_by_user_id": null
        "itask_assesment_role_id": null
        "itask_assesment_hierarchy": "G"
        "itask_assesment_method": "T"
        "itask_assesment_user_id": null
        "itask_assesment_orgstr_id": null
        "itask_assesment_orgstr_cnst": null
        "itask_petri_net_input": 1
        "itask_due_offset": null
        "itask_duration": null
        "itask_sufficient_end": "N"
        "ttask_instruction": null
        "itask_disc_flag": "N"
        "itask_multiinstance_flag": "N"
        "itask_duty": "Y"
        "itask_comment": null
        "iproc_status": "A"
        "user_name": "Apac Arnost"
        "iproc_owner_full_name": "Apac Arnost"
        "itask_assesment_user": " "
        "solver_user_full_name": "Apac Arnost"
        "exec_recalc": 0
        "iproc_name": "Edit"
        "iproc_priority": "M"
        "iproc_main_iproc_id": -1
        "tproc_name": "testTPb11"
        "guarant_id": null
        "c_solve": 1
        "c_take": 0
        "c_handover": 1
        "c_add": 1
        "c_due": 0
        "id": 1
        "meta": {"href": "/tasks/1"}
        }
      
## Get Tasks Summary [GET /tasks/info]

+ Response 200 (application/json; charset=utf-8)

        {
            "MY_TASKS": "100",
            "MY_TASKS_MISS": "111",
            "TO_ASSIGN": "22",
            "MY_PROCESSES": "11",
            "MY_PROCESSES_PROB": "122",
            "TO_PULL": "22"
        }

## Get Task Attachments [GET /tasks/{taskId}/attachments]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks/{taskId}/attachments" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "dmsf_name": "some clever note",
                    "dmsf_insert_date": "2015-09-11T10:44:03Z",
                    "dmsf_owner_full_name": "Thomas Mann",
                    "dmsf_revision": 1,
                    "iproc_name": "Name of process",
                    "meta": { "href": "/files/1211" }
                }
            ]
        }
        
## Get Task Variables [GET /tasks/{taskId}/variables]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/task/variables/{id}" },
            "completed_in": 0.21,
            "items": [
                {
        "ivar_name": "testVarOne"
        "ivar_filtered_list": null
        "ivar_type": "T"
        "ivar_attribute": null
        "ivar_usage": "W"
        "ivar_value": "testValue"
        "ivar_group": "not implemented"
        "ivar_lov": [0]
        "ivar_lov_value": null
        "dlist_name": null
        "tvar_meta": null
        "tvar_id": 5
        "ivar_multi": null
        "ivar_dt_index": null
        "ivar_col_index": null
        "id": 9
        "meta": {"href": "/tasks/:taskId/variables"}
            ]
        }
       
## Get Task Variable [GET /variables/{variableId}]

+ Response 200 (application/json; charset=utf-8)

        {
        "ivar_filtered_list": null
        "ivar_name": "testVarTwo"
        "ivar_type": "T"
        "ivar_attribute": null
        "ivar_value": "valueTest"
        "ivar_group": "not implemented"
        "ivar_lov": [0]
        "ivar_lov_value": null
        "dlist_name": null
        "tvar_meta": null
        "tvar_id": 2
        "ivar_multi": null
        "ivar_dt_index": null
        "ivar_col_index": null
        "id": 1
        "meta": {"href": "/variables/1"}
        }
        

## Get Task Possible Users [GET /tasks/{taskId}/possible-users]
returns possible users to assign

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks/{taskId}/possible-users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/tasks/{taskId}/possible-users?offset=20&amp;limit=10"} },
            "items": [
                {
        "user_name": "TST_API_ADMIN"
        "user_first_name": "Test"
        "user_last_name": "TestApiAdmin"
        "user_status": "D"
        "user_email": null
        "org_id": 1
        "user_change_password": null
        "user_bad_login_count": 0
        "user_title_prefix": null
        "user_external_login": null
        "user_external_source": null
        "user_comp_id": null
        "user_comp_code": null
        "id": 6
        "meta": {"href": "/tasks/:taskId/possible-users"}
                }
            ]
        }
        
## Update Task Variables [POST /tasks/variables]

+ Request (application/json)

        {
            "items": [
                {
                    "id": "11022",
                    "ivar_name": "Name of variable",
                    "ivar_value": "Value of variable (text, number, date, ...)"
                },
                {
                    "id": "11023",
                    "ivar_value": "Value of variable (text, number, date, ...)"
                }
            ]
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        
+ Response 400 (application/json)

        {
            "error": {"message": "Incorrect ..."}
        }

## Update Task Variable [POST /tasks/variables/{variableId}]

+ Request (application/json)

        {
            "ivar_value": "Value of variable (text, number, date, ...)"
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
   
   
        
## Retrieve Dynamic List [GET /tasks/dyn-list/{dlName}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks/dyn-list/{dlName}" },
            "completed_in": 121,
            "items": [
                {
                    "dlist_value": "some clever note"
                }
        }
        
## Task Finish [POST /tasks/finish/{taskID}]

+ Request (application/json)

        {
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true,
            "next_itask_id": 222,
            "next_itask_name": "Name of new Task"
        }

## Add Task [POST /tasks/addTask]

+ Request (application/json)

        {
            "iproc_id": 63880,
            "itask_id": 1931218,
            "itask_type": "S",
            "itask_name": "My SOAP task !",
            "itask_description": "HULAHU",
            "itask_due_date_start": null,
            "itask_due_date_finish": null,
            "itask_assesment_hierarchy": "G",
            "itask_assesment_user_id": 1,
            "ttask_garant": "SU",
            "itask_assesment_method": "T"
        }
            
+ Response 200 (application/json; charset=utf-8)

            {
              "itask_id": 3071138
            }



## Process [/processes]

### All Processes [GET]
 All Processes [GET]
+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/processes" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
        "org_id": 1
        "tproc_id": 3
        "iproc_name": "Edit"
        "iproc_description": "Something"
        "iproc_notes": ""
        "iproc_inst_owner_user_id": 8
        "iproc_status": "A"
        "iproc_actual_start_date": "2016-10-31T11:44:43.000Z"
        "iproc_actual_finish_date": null
        "iproc_due_date_finish": null
        "iproc_priority": "M"
        "iproc_summary": "test1: Apac Arnost, test2: Apac Arnost, test3: Apac Arnost"
        "iproc_main_iproc_id": -1
        "iproc_vis_role_id": null
        "user_id": 8
        "iproc_owner_full_name": "Apac Arnost"
        "tproc_name": "testTPb11"
        "folstr_name": null
        "c_sus": 1
        "c_hev": 1
        "id": 1
        "meta": {"href": "/processes/1"}
                }
            ]
        }

### Processes With Special Condition [GET /processes/{+type}]

    + Parameters
        + type (done|problem|after-due-date|suspended)
        
+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/processes/{type}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "iproc_name": "Case nr.1",
                    "tproc_name": "Template of process",
                    "folstr_name": "Folder nr.1",
                    "iproc_owner_full_name": "122",
                    "iproc_actual_date_start": "2015-09-01T12:44:03Z",
                    "iproc_due_date_finish": "2015-09-11T10:44:03Z",
                    "iproc_summary": "Task: Thomas Mann",
                    "iproc_actual_finish_date": "2015-10-11T10:44:03Z",
                    "meta": { "href": "/process/{id}" }
                }
            ]
        }
        
## Get Process [GET /processes/{processId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "Example of task",
            "tproc_name": "Name of template",
            "iproc_name": "Name of the process",
            "iproc_description": "Some description.",
            "iproc_owner_full_name": "Thomas Mann",
            "iproc_owner_orgstr_name": "Head of Marketing",
            "iproc_status": "A",
            "iproc_actual_start_date": "2015-09-11T10:44:03Z",
            "iproc_actual_finish_date" : "2015-09-11T10:44:03Z",
            "iproc_due_date_finish": "2015-09-11T10:44:03Z",
            "iproc_summary": "summary of process",
            "iproc_url": "http://alfresco.com/",
            "iproc_url_tab_name": "Alfresco"
            "meta": { "href": "/process/{id}" }
        }

## Get Process Variables [GET /processes/{processId}/variables]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "10",
            "meta": { "href" : "/process/{processId}/variables" },
            "completed_in": 11,
            "previous": null,
            "next": { "meta": { "href": "/process/{processId}/variables?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "ivar_name": "Variable with text",
                    "ivar_type": "T",
                    "ivar_attribute": "A",
                    "ivar_value": "value of variable",
                    "ivar_group": "nameOfTheGroup"
                }
            ]
        }

## Get Process Notes [GET /processes/{processId}/notes]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/process/notes/{processId}" },
            "completed_in": 0.21,
            "items": [
                {
                    "id": "1",
                    "ipn_note": "some clever note",
                    "ipn_datetime": "2015-09-11T10:44:03Z",
                    "ipn_user_full_name": "Thomas Mann",
                    "ipn_vice_user_full_name": "Thomas Mann",
                    "ipn_type": "USER",
                    "ipn_itask_name": "Name of the task"
                    "meta": { "href": "/note/1211" }
                }
            ]
        }
        
## Get Process Attachments [GET /processes/{processId}/attachments]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/process/{processId}/attachments" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "name": "some clever note",
                    "datetime_insert": "2015-09-11T10:44:03Z",
                    "dmsf_owner_full_name": "Thomas Mann",
                    "revision": 1,
                    "meta": { "href": "/process/1211" }
                }
            ]
        }

## Get Process Actual Tasks [GET /processes/{processId}/tasks]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "itask_name": "Example of task",
                    "iproc_name": "Case nr.1",
                    "iproc_owner_full_name": "Tomáš Jirsa",
                    "solver_user_full_name": "Tomáš Jirsa",
                    "iproc_owner_user_id": "122",
                    "itask_actual_date_start": "2015-09-01T12:44:03Z",
                    "itask_due_date_finish": "2015-09-11T10:44:03Z",
                    "itask_comment": "just a dummy comment",
                    "itask_status": "A",
                    "meta": { "href": "/task/1211" }
                }
            ]
        }

## Get Process Graph [GET /processes/{processId}/graph]

+ Response 200 (application/json; charset=utf-8)

        {
        }
        
## Get Process History Tasks [GET /processes/{processId}/history]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                "org_id": 1,
                "iproc_id": 96177,
                "itask_id": 3000156,
                "itaskh_name": "Name of task",
                "itaskh_actual_date_start": "2015-12-11T14:36:59.000Z",
                "itaskh_actual_date_finish": "2015-12-11T14:36:59.000Z",
                "itaskh_due_date_start": null,
                "itaskh_due_date_finish": null,
                "itaskh_finished_by_user_id": 14847,
                "itaskh_finished_by_user": "Thomas Mann",
                "itaskh_user_id": null,
                "itaskh_note": "Task finished",
                "itaskh_subprocess_iproc_id": -1,
                "id": 1050430,
                    "meta": { "href": "/task/1211" }
                }
            ]
        }        
        
## Process Activate [POST /processes/activate/{tprocId}]

+ Request (application/json)

        {
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true,
            "next_itask_id": 222,
            "next_itask_name": "Name of new Task"
        }     

### Variable [/variables]

## Update Variable [POST /variables/{variableId}]

+ Request (application/json)

        {
            "ivar_value": "Value of variable (text, number, date, ...)"
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        
## Custom Views [/custom-views]

### All Custom Views [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "5",
            "meta": { "href" : "/custom-views" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "cv_name": "some clever note",
                    "tproc_name": "Template process name",
                    "cv_visibility": "P",
                    "cv_iproc_status_list": 1,
                    "meta": { "href": "/custom-view/1" }
                }
            ]
        }
        
### All Custom View Processes [GET /cv/{cv_id}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "5",
            "meta": { "href" : "/cv" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "iproc_name": "some clever note",
                    "iproc_description": "Template process name",
                    "iproc_inst_owner_user": "P",
                    "iproc_actual_start_date": 1,
                    "iproc_due_date_finish": null,
                    "iproc_priority": "M",
                     "iproc_summary": null,
                     "variables": [
                        {
                            "value": "some value",
                            "tvar_id": "4321",
                            "ivar_id": "1234",
                            "ivar_name": "Název"
                        }
                     ],
                    "meta": { "href": "/custom-view/2489" }
                }
            ]
        }
   
### Create Custom View [POST /custom-views]

+ Request (application/json)

        {  
           "cv_name":"Cv name",
           "tproc_id":21,
           "cv_visibility": "P",
           "cv_id": 1662,
           "cv_filter": [{"column":"V703","enabled":true,"op":"eq","value":"69"}],
           "columns":[  
              {  
                 "cvc_name":"COLUMN TITLE 2",
                 "org_id":1,
                 "tvar_id":46,
                 "tvar_name":"TVAR_NAME"
              }
           ],
           "shares":[  
              {  
                 "user_id":8495
              },
              {  
                 "user_id":1
              },              
              {  
                 "orgstr_id":1
              },
              {  
                 "role_id":-1
              }
           ]
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }  
        
## Template Process [/template-processes]

### Get Template Process [GET /template-processes/{templateId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "1",
            "tproc_name": "Template of process",
            "tproc_description": "Description of process.",
            "tproc_status": "A",
            "tproc_owner_full_name": "Thomas Mann",
            "folstr_id": 12,
            "tproc_last_changed_by_user": "Thomas Mann",
            "tproc_last_changed_date": "2015-09-11T10:44:03Z",
            "meta": { "href": "/template-process/1211" }
        }

### All Template Processes [GET]
Retrieve all non-deleted template processes.

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-processes" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "tproc_name": "Template of process",
                    "tproc_description": "Description of process.",
                    "tproc_status": "A",
                    "tproc_locked_by_user_id": 1,
                    "tproc_owner_user": "Thomas Mann",
                    "folstr_id": 12,
                    "tproc_last_changed_by_user_id": 1,
                    "tproc_last_changed_by_user": "Thomas Mann",
                    "tproc_last_changed_date": "2015-09-11T10:44:03Z",
                    "meta": { "href": "/template-process/1211" }
                }
            ]
        }

### Create Template Process [POST /template-processes]

+ Request (application/json)

        {
            "tproc_name": "my_test2",
            "tproc_id": 664,
            "tproc_owner_user_id": 8495,
            "tproc_description": "Hello world",
            "tproc_vis_orgstR_id": 1,
            "tproc_vis_role_id": -1
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }  

### All Template Processes in Folder [GET /template-processes/folder/{id}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-processes/folder/{id}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "tproc_name": "Template of process",
                    "tproc_description": "Description of process.",
                    "tproc_status": "A",
                    "tproc_owner_full_name": "Thomas Mann",
                    "folstr_id": 12,
                    "tproc_last_changed_by_user": "Thomas Mann",
                    "tproc_last_changed_date": "2015-09-11T10:44:03Z",
                    "meta": { "href": "/template-process/1211" }
                }
            ]
        }
        
### All Template Processes Folders [GET /template-processes/folder/structure]

+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/template-processes/folder/structure" },
            "items": [
                { 
                    "label": "CPM",
                    "id": 2
                },
                {
                    "label": "External", 
                    "id": 3
                }
            ]
        }   
        
        
### All Template Variables for Template Process [GET /template-processes/{templateId}/template-variables/]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-processes/{templateId}/template-variables/" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-processes/{templateId}/template-variables/?offset=20&amp;limit=10"} },
            "items": [
                {
                    "tvar_name":"Vyjádření řešitele",
                    "tvar_type":"LT",
                    "tvar_attribute":null,
                    "tvar_value":null,
                    "id":1738,
                    "meta": {
                        "href":"/template-processes/{tprocId}/template-variables/1738"
                    }
                }
            ]
        }         

### Get Template Variable for Template Process [GET /template-variables/{templateVariableId}]       
  
+ Response 200 (application/json; charset=utf-8)

        {
        
        }
  
## Template Tasks [/template-processes/{templateId}/template-tasks]

### All Template Tasks for Template Process [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-tasks" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "ttask_name": "Name of template task",
                    "ttask_description": "Description of process.",
                    "ttask_type": "A",
                    "ttask_sufficient_end": "S",
                    "ttask_assesment_role": "Role name",
                    "ttask_assesment_org": "Org name",
                    "ttask_assesment_user": "supervizor()",
                    "ttask_assesment_hierarchy": "",
                    "ttask_assesment_method": "",
                    "ttask_duty": "",
                    "ttask_calc_count": 10,
                    "meta": { "href": "/template-task/1211" }
                }
            ]
        }  
        
### Get Template Task [GET /template-tasks/{templateTaskId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "1",
            "ttask_name": "Name of template task",
            "ttask_description": "Description of process.",
            "ttask_type": "A",
            "ttask_sufficient_end": "S",
            "ttask_assesment_role": "Role name",
            "ttask_assesment_org": "Org name",
            "ttask_assesment_user": "supervizor()",
            "ttask_assesment_hierarchy": "",
            "ttask_assesment_method": "",
            "ttask_duty": "",
            "ttask_calc_count": 10,
            "meta": { "href": "/template-task/1211" }
        }  

### Create Template Task [POST /template-tasks]

+ Request (application/json)

        {
            "ttask_completion_co": "A",
            "ttask_enot_tgt_type": 0,
            "ttask_invoke_event": "B",
            "ttask_petri_net_input": 0,
            "ttask_due_offset": "no",
            "ttask_duration": "no",
            "ttask_sufficient_end": "N",
            "ttask_run_only_once": "N",
            "ttask_multiinstance_flag": "N",
            "ttask_reference_user": "supervisor()",
            "ttask_assesment_hierarchy": "L",
            "ttask_assesment_method": "T",
            "ttask_duty": "Y",
            "tproc_id": 651,
            "ttask_name": "Hello",
            "ttask_description": "Trello",
            "ttask_type": "P",
            "ttask_subprocess_tproc_id": 503,
            "ttask_garant": "PO",
            "ttask_gen_history": "Y",
            "subp": [
                {
                    "rdef_id": -1,
                    "tvar_id": null,
                    "tvar_id_dest": 3469,
                    "rdefpar_name": null,
                    "evepar_name": "$CONSTANT",
                    "rdefpar_value": 123,
                    "rdefpar_type": "DL"
                }
            ],
            "subr": null    
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Create Template Task [POST /template-link]

+ Request (application/json)

        {
            "tproc_id": 651,
            "ttasklink_from_ttask_id": 3408,
            "ttasklink_to_ttask_id": 3409,
            "sourcePort": 1,
            "targetPort": 3
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Delete Template Task [DELETE /template-link/{id}]

+ Request 200 (application/json)

        {
        }
        
+ Response 200 (application/json; charset=utf-8)
        
        {
            "result": true
        } 

### Create Template Graph Link [POST /template-processes/{tproc_id}/template-graph-link]

+ Request (application/json)

        {
            "form": "graphControl",
            "tproc_id": 651,
            "linkFrom": 3408,
            "linkTo": 3409,
            "sourcePort": 1,
            "targetPort": 3
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Move Template Graph Link [POST /template-processes/{tproc_id}/template-graph]

+ Request (application/json)

        {
            "tasks": [
                {
                    "id": 3408,
                    "x": 50,
                    "y": 196,
                    "color": "FFE4E1"
                }
            ]
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

## Template Variables [/template-processes/:tprocId/template-variables]

### Create Template Variable [POST /template-processes/{tproc_id}/template-variables]

+ Request (application/json)

        {
          "tvar_name": "Var",
          "tvar_type": "T"
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Template Variables Usage [GET /template-processes/{tproc_id}/template-variables/usage]

+ Request (application/json)

        [{
            "global_mapping": "N",
            "ttask_id": 4623,
            "ttask_var_mapping": {
                "read": [6094],
                "write": [],
                "must": [],
                "order": [6094]
            }
        },
        {
            "global_mapping": "N",
            "ttask_id": 4712,
            "ttask_var_mapping": {
                "read": [6093, 6094],
                "write": [],
                "must": [],
                "order": [6093, 6094]
            }
        }]
            

+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Update Template Variables Usage [POST /template-processes/{tproc_id}/template-variables/usage]

+ Request (application/json)

        [{
            "global_mapping": "N",
            "ttask_id": 4623,
            "ttask_var_mapping": {
                "read": [6094],
                "write": [],
                "must": [],
                "order": [6094]
            }
        },
        {
            "global_mapping": "N",
            "ttask_id": 4712,
            "ttask_var_mapping": {
                "read": [6093,
                        6094],
                "write": [],
                "must": [],
                "order": [6093, 6094]
            }
        }]

            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        
        
## User [/users]

### All Users [GET]
Retrieve all non-deleted users.

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "user_status": "A",
                    "user_name": "TMANN",
                    "user_first_name": "Thomas",
                    "user_last_name": "Mann",
                    "user_email": "thomas@mann.com",
                    "meta": { "href": "/users/1211" }
                }
            ]
        }
        
### Create user [POST /users]
+ Request 200

    + Headers
    
                Content-Type: application/json
                Authorization: Bearer 0d4a227664de9e38eba9ff1bb03d6bf5
                
    + Attributes (object)
        
        + user_name
            NOT NULL
        + user_password
            NOT NULL, minimum 3 characters
        + first_name
            NOT NULL
        + last_name
            NOT NULL
        + user_email
        + roles (array)
        + managed_organizations (array)
        + user_status
            in [A, D, L] ... Active, Deleted, Locked
        + org_id (number)
        + user_change_password
        + user_bad_login_count (number)
        + user_title_prefix
        + user_external_login
        + user_external_source
        + user_comp_id
        + user_comp_code
        
    + Body
    
            {
                "user_name": "MY_NAME",
                "user_password": "MY_PASSWORD",
                "user_email": "email@dot.com",
                "user_first_name": "Name",
                "user_last_name": "Surname",
                "org_id": 1,
                "roles": [-1, -4]
            }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true,
            "id": 1584
        }
        

### Create/Update user [POST /users]
+ Request 200 (application/json)

        {
            "id": 15506,
            "user_name": "MY_NAME",
            "user_email": "email@dot.com",
            "user_first_name": "jmeno",
            "user_last_name": "prijmeni",
            "roles": [-1, -4],
            "organization": {
                "orgstr_id": 1,
                "manager": false
            }
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        

### All Deleted Users [GET /users/deleted]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users/deleted" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "user_status": "A",
                    "user_name": "TMANN",
                    "user_first_name": "Thomas",
                    "user_last_name": "Mann",
                    "user_email": "thomas@mann.com",
                    "meta": { "href": "/users/1211" }
                }
            ]
        }
        
### Users of Organization Unit [GET /users/organization/{orgstrId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users/organization/{orgstrId}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/users/organization/{orgstrId}?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "user_status": "A",
                    "user_name": "TMANN",
                    "user_first_name": "Thomas",
                    "user_last_name": "Mann",
                    "user_email": "thomas@mann.com",
                    "meta": { "href": "/users/1211" }
                }
            ]
        }
        
### Get User [GET /users/{userId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 1,
            "user_email": "thomas@mann.cz",
            "user_first_name": "Thomas",
            "user_last_name": "Mann",
            "user_name": "TMANN",
            "user_status": "A",
            "roles":  [
                {
                    "role_name": "$Admin",
                    "id": -1,
                    "meta": {
                        "href": ""
                    }
                }
            ],
            "orgstr_id": 20,
            "meta": { "href": "/users/{userId}" }
        }
        

### Get Info of Logged User [GET /logged-user]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 1,
            "user_first_name": "Thomas",
            "user_last_name": "Mann",
            "user_name": "TMANN",
            "user_status": "A",
            "roles":  [
                {
                    "role_name": "$Inspector",
                    "id": -3,
                    "meta": {
                        "href": ""
                    }
                }
            ],
            "meta": { "href": "/users/{userId}" }
        }
        
### Get org.structure [GET /org-structure]

+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/org-structure" },
            "items": [
                { 
                    "label": "CPM",
                    "id": 2,
                    "manager_user_name": null,
                    "manager_user_id": null,
                    "children": []
                },
                {
                    "label": "External", 
                    "id": 3,
                    "manager_user_name": null,
                    "manager_user_id": null,
                    "children": [
                        {"label": "Teura", "id": 4, "manager_user_name": null, "manager_user_id": null}
                    ]
                },
                {
                    "label": "Head", 
                    "id": 5,
                    "manager_user_name": "Thomas Mann",
                    "manager_user_id": 22,
                    "children": [
                        {"label": "BI/DWH", "id": 6, "manager_user_name": null, "manager_user_id": null},
                        {"label": "Business processes", "id": 7, "manager_user_name": null, "manager_user_id": null},
                        {"label": "Sales", "id": 8, "manager_user_name": null, "manager_user_id": null},
                        {"label": "Testing", "id": 9, "manager_user_name": null, "manager_user_id": null},
                        {"label": "Development", "id": 10, "manager_user_name": null, "manager_user_id": null}
                    ]
                },
                {
                    "label": "Support", 
                    "id": 12,
                    "children": [
                        {"label": "Internal", "id": 13, "manager_user_name": null, "manager_user_id": null},
                        {"label": "External", "id": 14, "manager_user_name": null, "manager_user_id": null}
                    ]
                }
            ]
        }

### Create/Update Org.unit [POST /org-structure]
+ Request 200 (application/json)

        {
          "orgstr_name": "MyTesyt",
          "users": [1, 8495]
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### All org.units [GET /org-units]

+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/org-units" },
            "items": [
                {
                    "id": 2942,
                    "orgstr_name": "Organisation name",
                    "parent_orgstr_id": 2867,
                    "manager_user_id": 2,
                    "manager_user_name": "Thomas Mann",
                    "company_ic": "26360870",
                    "organization_type": null,
                    "meta": {
                        "href": "/org-units/2942"
                    }
                }
            ]
        }

## User Vicing [/vice]
### Get User Vice For Logged User [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "uv_id": 1,
            "user_id": 112,
            "user_id_vice": 101,
            "uv_enabled": 1,
            "user_status": "A",
            "user_full_name": "Thomas Mann",
            "uv_from": "2016-04-01T00:00:00Z",
            "uv_to": "2016-06-01T00:00:00Z",
            "meta": { "href": "/plan/1211" }
        }
        
### Create Vice [POST /vice]
+ Request 200 (application/json)

        {
          "from": "2016-04-30T21:59:58.000Z",
          "to": "2016-04-30T21:59:59.000Z",
          "user_id_vice": 9495,
          "user_id": 1,
          "uv_enabled": 1,
          "view_only": 'Y' 
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        
### Delete User Vice [DELETE /vice/{id}]

+ Request 200 (application/json)

        {
        }
        
+ Response 200 (application/json; charset=utf-8)
        
        {
            "result": true
        }        
        
        
## Plan [/plans]
### All Plans [GET]
        
+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/plans" },
            "completed_in": 21,
            "items": [
                {
                    "id": 1,
                    "pln_status": "A",
                    "pln_name": "Plan name",
                    "tproc_name": "Template process name",
                    "user_full_name": "Thomas Mann",
                    "pln_repeat_offset_type": "",
                    "pln_repeat_offset": "",
                    "meta": { "href": "/plan/1211" }
                }
            ]
        }
    
## User Parameters [/user-parameters]
### Settings of Logged User [GET]       

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/settings" },
            "completed_in": 21,
            "items": [
                {
                    "name": "MAIL_TOTAL",
                    "value": "Y"
                }
            ]
        }
        
### Update Settigs [POST]

+ Request 200 (application/json)

        [{
            "name": "CLIENT_LANGUAGE",
            "value": "cs"
        },
        {
            "name": "USER_FIRST_NAME",
            "value": "admin"
        },
        {
            "name": "USER_EMAIL",
            "value": "test@email.com"
        }]

+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

## Roles  [/roles]
### All Roles [GET /roles]

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/roles" },
            "completed_in": 21,
            "items": [
                {
                    "id": 23,
                    "role_name": "Dashboard",
                    "role_is_deleted": "N",
                    "role_note": "Some role description",
                    "meta": {
                        "href": "/roles/23"
                    }
                }
            ]
        }
        
### Create role [POST /roles]
+ Request 200 (application/json)

        {
          "role_name": "Hello",
          "users": [1, 8495]
        }

+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
 
### Get Role [GET /roles/{roleId}]

+ Parameters
    + roleId: 82 (number, optional) - Id of a role.

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 23,
            "role_name": "Dashboard",
            "role_is_deleted": "N",
            "role_note": "Some role description",
            "meta": {
                "href": "/roles/23"
            }
        }
        
### Structure of Roles [GET /roles/structure]      

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/roles/structure" },
            "items":
                {
                    "FolderName": [
                        {
                            "id": 23,
                            "role_name": "Dashboard",
                            "role_is_deleted": "N",
                            "role_note": "Some role description",
                            "meta": {
                                "href": "/roles/23"
                            }
                        }
                    ]
                }
        }
        
## DMS [/dms]

### All Files [GET /dms/all]
Retrieve all files for user.

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id":8809,
                    "iproc_id":null,
                    "iproc_name":null,
                    "tproc_name":null,
                    "name":"Seznam subjektů web PK.doc",
                    "datetime_insert": "2015-10-11T10:44:03Z",
                    "revision":1,
                    "user_id_insert":1,
                    "dmsf_src":"DMS:_165/Seznam subjektu web PK.doc.1654a4890108e1f720d6969a086287e2.1.1428290129",
                    "dmsf_id_prev": null,
                    "dmsf_owner":"Admin Admin",
                    "is_deleted": "Y",
                    "is_current": "N",
                    "datetime_deleted": "2015-10-11T10:44:03Z",
                    "user_id_deleted": 1,
                    "file_type": "application/pdf",
                    "meta": { "href":"/dms/all/8809" }
                }
            ]
        }
        
### Current Files [GET /dms/current]
Retrieve current files for user.

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id":8809,
                    "iproc_id":null,
                    "iproc_name":null,
                    "tproc_name":null,
                    "name":"Seznam subjektů web PK.doc",
                    "datetime_insert": "2015-10-11T10:44:03Z",
                    "revision":1,
                    "user_id_insert":1,
                    "dmsf_src":"DMS:_165/Seznam subjektu web PK.doc.1654a4890108e1f720d6969a086287e2.1.1428290129",
                    "dmsf_id_prev": null,
                    "dmsf_owner":"Admin Admin",
                    "is_deleted": "Y",
                    "is_current": "N",
                    "datetime_deleted": "2015-10-11T10:44:03Z",
                    "user_id_deleted": 1,
                    "file_type": "application/pdf",
                    "meta": { "href":"/dms/all/8809" }
                }
            ]
        }   
        
### Deleted Files [GET /dms/deleted]
Retrieve all deleted files for user.

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id":8809,
                    "iproc_id":null,
                    "iproc_name":null,
                    "tproc_name":null,
                    "name":"Seznam subjektů web PK.doc",
                    "datetime_insert": "2015-10-11T10:44:03Z",
                    "revision":1,
                    "user_id_insert":1,
                    "dmsf_src":"DMS:_165/Seznam subjektu web PK.doc.1654a4890108e1f720d6969a086287e2.1.1428290129",
                    "dmsf_id_prev": null,
                    "dmsf_owner":"Admin Admin",
                    "is_deleted": "Y",
                    "is_current": "N",
                    "datetime_deleted": "2015-10-11T10:44:03Z",
                    "user_id_deleted": 1,
                    "file_type": "application/pdf",
                    "meta": { "href":"/dms/all/8809" }
                }
            ]
        }        
        
### Update logical tag relations [POST /dms/tags/logical]
+ Request 200 (application/json)

        {
            "logical": [
                {
                    "name": "UND",
                    "tags": [1, 28] 
                },
                {
                    "name": "xx",
                    "tags": [1, 29] 
                }
            ]
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Update tags [POST /dms/tags]
+ Request 200 (application/json)

        {
          "DMST_ID": 1,
          "NAME": "Uživatel",
          "DESCRIPTION": null,
          "TYPE": "T",
          "DEFAULT_VALUE": "#username",
          "LIST_OF_VALUES": "[]"
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Update file tags [POST /dms/file/:dmsfId/metadata]
+ Request 200 (application/json)

        [
            {
                "DMST_ID": 1,
                "DMST_VALUE": "VALENTA_3"
            },
            {
                "DMST_ID": 2,
                "DMST_VALUE": "good"
            }
        ]
        
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }


### Search file [POST /dms/search]
+ Request 200 (application/json)

        {
            "query": "fulltext value",
            "tags": {
                "26": "meta value"
            }
        }

        
+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id":8809,
                    "iproc_id":null,
                    "iproc_name":null,
                    "tproc_name":null,
                    "name":"Seznam subjektů web PK.doc",
                    "datetime_insert": "2015-10-11T10:44:03Z",
                    "revision":1,
                    "user_id_insert":1,
                    "dmsf_src":"DMS:_165/Seznam subjektu web PK.doc.1654a4890108e1f720d6969a086287e2.1.1428290129",
                    "dmsf_id_prev": null,
                    "dmsf_owner":"Admin Admin",
                    "is_deleted": "Y",
                    "is_current": "N",
                    "datetime_deleted": "2015-10-11T10:44:03Z",
                    "user_id_deleted": 1,
                    "file_type": "application/pdf",
                    "meta": { "href":"/dms/all/8809" }
                }
            ]
        }       
        
        
### Update folder [POST /dms/file]
+ Request 200 (application/json)

        {
          "FOLDER_NAME": "TEST_FOLDER",
          "PARENT_ID": 1
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

### Delete folder [DELETE /dms/file]
+ Request 200 (application/json)

        {
          "FOLDER_ID": 1000
        }
        
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }