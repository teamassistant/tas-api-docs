FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Teamassistant (TAS)

REST Api is a complex API for managing entities of TAS and controlling workflows.

## Retrieving Lists
You can pass parameters for sorting and filtering.

### Additional parameters

    + Parameters
        + offset: 0 (number, optional) 
            - The number of items to skip before returning anything.
        + limit: 100 (number, optional) - (number, optional) 
            - The number of returned items.
        + filter: (string, optional) 
            - columnName<like>value
            - (<eq>|<nq>|<gt>|<lt>|<ge>|<le>|<like>|<nlike>)(<and|or>)
        + order: columnName
        + sort: asc|desc

## Login [/authenticate]

### Authenticate [POST]

+ Request Login (application/json)

        {
            "username": "yourId",
            "password": "yourPass",
            "grant_type": "password"
        }

+ Response 200 (application/json; charset=utf-8)

        {
            "access_token": "a4ef8fd62eda54ade12fbb068da89092",
            "expires_in": 72000,
            "refreshTokenValidTo": "2016-12-03T15:36:06.115Z",
            "refresh_token": "y4gPzRDX52XSwA7sRb5Bfk1sMx2rlmBB6AE22AsaiQyK8woCdXqRCHFfA0LOGhA9",
            "tokenValidTo": "2015-12-05T11:36:06.115Z",
            "token_type": "Bearer"
        }


## Task [/tasks]

### List All Tasks [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "org_id": "1",
                    "itask_status": "A",
                    "iproc_id": 96152,
                    "ttask_id": 3217,
                    "itask_name": "proměnné pro čtení",
                    "itask_is_iproc_id": null,
                    "itask_description": null,
                    "itask_due_date_start": null,
                    "itask_due_date_finish": null,
                    "itask_actual_date_start": "2015-12-07T12:05:25.000Z",
                    "itask_actual_date_finish": null,
                    "itask_auto_start": "N",
                    "itask_user_id": 14827,
                    "solver_user_full_name": "Ci Test",
                    "itask_finished_by_user_id": null,
                    "itask_assesment_role_id": null,
                    "itask_assesment_hierarchy": "G",
                    "itask_assesment_method": "T",
                    "itask_assesment_user_id": null,
                    "itask_assesment_user": " ",
                    "itask_petri_net_input": 1,
                    "itask_due_offset": null,
                    "itask_duration": null,
                    "itask_sufficient_end": "N",
                    "itask_disc_flag": "N",
                    "itask_duty": "Y",
                    "user_name": "Ci Test",
                    "iproc_name": "edit",
                    "iproc_priority": "M",
                    "tproc_name": "RB - test proměnných",
                    "iproc_owner_full_name": "Ci Test",
                    "iproc_status": "A",
                    "c_solve": 1,
                    "c_take": 0,
                    "c_handover": 1,
                    "c_add": 1,
                    "c_due": 0,
                    "itask_type": "S",
                    "itask_multiinstance_flag": "N",
                    "itask_comment": null,
                    "id": 2999644,
                    "meta": {
                        "href": "/tasks/2999644"
                    }
                }
            ]
        }
 
### List Tasks With Special Condition [GET /tasks/{+type}]

    + Parameters
        + type (mine|to-assign|to-assign-dues|to-pull|done)

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "itask_name": "Example of task",
                    "iproc_name": "Case nr.1",
                    "iproc_owner_full_name": "Tomáš Jirsa",
                    "solver_user_full_name": "Tomáš Jirsa",
                    "iproc_owner_user_id": "122",
                    "itask_actual_date_start": "2015-09-01T12:44:03Z",
                    "itask_due_date_finish": "2015-09-11T10:44:03Z",
                    "itask_comment": "just a dummy comment",
                    "meta": { "href": "/task/1211" }
                }
            ]
        }
        
## Get Task [GET /tasks/{taskId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "itask_name": "Example of task",
            "iproc_name": "Case nr.1",
            "iproc_id": 12212,
            "iproc_owner_full_name": "Tomáš Jirsa",
            "solver_user_full_name": "Tomáš Jirsa",
            "iproc_owner_user_id": "122",
            "itask_actual_date_start": "2015-09-01T12:44:03Z",
            "itask_due_date_finish": "2015-09-11T10:44:03Z",
            "itask_comment": "just a dummy comment",
            "meta": { "href": "/task/1211" }
        }
      
## Get Tasks Summary [GET /tasks/info]

+ Response 200 (application/json; charset=utf-8)

        {
            "MY_TASKS": "100",
            "MY_TASKS_MISS": "111",
            "TO_ASSIGN": "22",
            "MY_PROCESSES": "11",
            "MY_PROCESSES_PROB": "122",
            "TO_PULL": "22"
        }

## Get Task Variables [GET /tasks/{taskId}/variables]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/task/variables/{id}" },
            "completed_in": 0.21,
            "items": [
                {
                    "id": "1",
                    "ivar_name": "Variable with text",
                    "ivar_type": "T",
                    "ivar_attribute": "A",
                    "ivar_usage": "M",
                    "ivar_value": "value of variable",
                    "ivar_group": "nameOfTheGroup",
                    "ivar_lov": [
                        {"title": "Yes", value: "Yes"},
                        {"title": "No", value: "No"}
                    ],
                    "meta": { "href": "/task/1211" }
                }
            ]
        }

## Get Task Attachments [GET /tasks/{taskId}/attachments]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks/{taskId}/attachments" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "dmsf_name": "some clever note",
                    "dmsf_insert_date": "2015-09-11T10:44:03Z",
                    "dmsf_owner_full_name": "Thomas Mann",
                    "dmsf_revision": 1,
                    "iproc_name": "Name of process",
                    "meta": { "href": "/files/1211" }
                }
            ]
        }
        
## Update Task Variables [PUT /tasks/variables]

+ Request (application/json)

        {
            "items": [
                {
                    "id": "11022",
                    "ivar_name": "Name of variable",
                    "ivar_value": "Value of variable (text, number, date, ...)"
                },
                {
                    "id": "11023",
                    "ivar_value": "Value of variable (text, number, date, ...)"
                }
            ]
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }
        
+ Response 400 (application/json)

        {
            "error": {"message": "Incorrect ..."}
        }

## Update Task Variable [PUT /tasks/variables/{variableId}]

+ Request (application/json)

        {
            "ivar_value": "Value of variable (text, number, date, ...)"
        }
            
+ Response 200 (application/json; charset=utf-8)

        {
            "result": true
        }

## Process [/processes]

### List All Processes [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/processes" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "iproc_name": "Case nr.1",
                    "tproc_name": "Template of process",
                    "folstr_name": "Folder nr.1",
                    "iproc_owner_full_name": "Thomas Mann",
                    "iproc_actual_start_date": "2015-09-01T12:44:03Z",
                    "iproc_actual_finish_date": "2015-10-11T10:44:03Z",
                    "iproc_due_date_finish": "2015-09-11T10:44:03Z",
                    "iproc_summary": "Task: Thomas Mann",
                    "meta": { "href": "/process/{id}" }
                }
            ]
        }

### List Processes With Special Condition [GET /processes/{+type}]

    + Parameters
        + type (done|problem|after-due-date|suspended)
        
+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/processes/{type}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "iproc_name": "Case nr.1",
                    "tproc_name": "Template of process",
                    "folstr_name": "Folder nr.1",
                    "iproc_owner_full_name": "122",
                    "iproc_actual_date_start": "2015-09-01T12:44:03Z",
                    "iproc_due_date_finish": "2015-09-11T10:44:03Z",
                    "iproc_summary": "Task: Thomas Mann",
                    "iproc_actual_finish_date": "2015-10-11T10:44:03Z",
                    "meta": { "href": "/process/{id}" }
                }
            ]
        }
        
## Get Process [GET /processes/{processId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "Example of task",
            "tproc_name": "Name of template",
            "iproc_name": "Name of the process",
            "iproc_description": "Some description.",
            "iproc_owner_full_name": "Thomas Mann",
            "iproc_owner_orgstr_name": "Head of Marketing",
            "iproc_status": "A",
            "iproc_actual_start_date": "2015-09-11T10:44:03Z",
            "iproc_actual_finish_date" : "2015-09-11T10:44:03Z",
            "iproc_due_date_finish": "2015-09-11T10:44:03Z",
            "iproc_summary": "summary of process",
            "iproc_url": "http://alfresco.com/",
            "iproc_url_tab_name": "Alfresco"
            "meta": { "href": "/process/{id}" }
        }

## Get Process Variables [GET /processes/{processId}/variables]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "10",
            "meta": { "href" : "/process/{processId}/variables" },
            "completed_in": 11,
            "previous": null,
            "next": { "meta": { "href": "/process/{processId}/variables?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "ivar_name": "Variable with text",
                    "ivar_type": "T",
                    "ivar_attribute": "A",
                    "ivar_value": "value of variable",
                    "ivar_group": "nameOfTheGroup"
                }
            ]
        }

## Get Process Notes [GET /processes/{processId}/notes]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/process/notes/{processId}" },
            "completed_in": 0.21,
            "items": [
                {
                    "id": "1",
                    "ipn_note": "some clever note",
                    "ipn_datetime": "2015-09-11T10:44:03Z",
                    "ipn_user_full_name": "Thomas Mann",
                    "ipn_vice_user_full_name": "Thomas Mann",
                    "ipn_type": "USER",
                    "ipn_itask_name": "Name of the task"
                    "meta": { "href": "/note/1211" }
                }
            ]
        }
        
## Get Process Attachments [GET /processes/{processId}/attachments]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/process/{processId}/attachments" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "name": "some clever note",
                    "datetime_insert": "2015-09-11T10:44:03Z",
                    "dmsf_owner_full_name": "Thomas Mann",
                    "revision": 1,
                    "meta": { "href": "/process/1211" }
                }
            ]
        }

## Get Process Actual Tasks [GET /processes/{processId}/tasks]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/tasks" },
            "completed_in": 0.21,
            "previous": null,
            "next": { "meta": { "href": "/tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "itask_name": "Example of task",
                    "iproc_name": "Case nr.1",
                    "iproc_owner_full_name": "Tomáš Jirsa",
                    "solver_user_full_name": "Tomáš Jirsa",
                    "iproc_owner_user_id": "122",
                    "itask_actual_date_start": "2015-09-01T12:44:03Z",
                    "itask_due_date_finish": "2015-09-11T10:44:03Z",
                    "itask_comment": "just a dummy comment",
                    "itask_status": "A",
                    "meta": { "href": "/task/1211" }
                }
            ]
        }
        
        
## Custom Views [/custom-views]

### List All Custom Views [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "5",
            "meta": { "href" : "/custom-views" },
            "completed_in": 121,
            "items": [
                {
                    "id": "1",
                    "cv_name": "some clever note",
                    "tproc_name": "Template process name",
                    "cv_visibility": "P",
                    "cv_iproc_status_list": 1,
                    "meta": { "href": "/custom-view/1" }
                }
            ]
        }
        
## Template Process [/template-processes]

### Get Template Process [GET /template-processes/{templateId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "1",
            "tproc_name": "Template of process",
            "tproc_description": "Description of process.",
            "tproc_status": "A",
            "tproc_owner_full_name": "Thomas Mann",
            "folstr_id": 12,
            "tproc_last_changed_by_user": "Thomas Mann",
            "tproc_last_changed_date": "2015-09-11T10:44:03Z",
            "meta": { "href": "/template-process/1211" }
        }

### List All Template Processes [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-processes" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "tproc_name": "Template of process",
                    "tproc_description": "Description of process.",
                    "tproc_status": "A",
                    "tproc_locked_by_user_id": 1,
                    "tproc_owner_user": "Thomas Mann",
                    "folstr_id": 12,
                    "tproc_last_changed_by_user_id": 1,
                    "tproc_last_changed_by_user": "Thomas Mann",
                    "tproc_last_changed_date": "2015-09-11T10:44:03Z",
                    "meta": { "href": "/template-process/1211" }
                }
            ]
        }

### List All Template Processes in Folder [GET /template-processes/folder/{id}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-processes/folder/{id}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "tproc_name": "Template of process",
                    "tproc_description": "Description of process.",
                    "tproc_status": "A",
                    "tproc_owner_full_name": "Thomas Mann",
                    "folstr_id": 12,
                    "tproc_last_changed_by_user": "Thomas Mann",
                    "tproc_last_changed_date": "2015-09-11T10:44:03Z",
                    "meta": { "href": "/template-process/1211" }
                }
            ]
        }
        
### List All Template Processes Folders [GET /template-processes/folder/structure]

+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/template-processes/folder/structure" },
            "items": [
                { 
                    "label": "CPM",
                    "id": 2,
                    "templates": []
                },
                {
                    "label": "External", 
                    "id": 3,
                    "templates": [
                        {
                            "label": "Teura", 
                            "id": 4
                        }
                    ]
                }
            ]
        }   
        
### List All Template Variables for Template Process [GET /template-processes/{templateId}/template-variables/]

+ Response 200 (application/json; charset=utf-8)

        {
        }          

### Get Template Variable for Template Process [GET /template-variables/{templateVariableId}]       
  
+ Response 200 (application/json; charset=utf-8)

        {
        }
  
## Template Tasks [/template-processes/{templateId}/template-tasks]

### List All Template Tasks for Template Process [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/template-tasks" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/template-tasks?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "ttask_name": "Name of template task",
                    "ttask_description": "Description of process.",
                    "ttask_type": "A",
                    "ttask_sufficient_end": "S",
                    "ttask_assesment_role": "Role name",
                    "ttask_assesment_org": "Org name",
                    "ttask_assesment_user": "supervizor()",
                    "ttask_assesment_hierarchy": "",
                    "ttask_assesment_method": "",
                    "ttask_duty": "",
                    "ttask_calc_count": 10,
                    "meta": { "href": "/template-task/1211" }
                }
            ]
        }  
        
### Get Template Task [GET /template-tasks/{templateTaskId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": "1",
            "ttask_name": "Name of template task",
            "ttask_description": "Description of process.",
            "ttask_type": "A",
            "ttask_sufficient_end": "S",
            "ttask_assesment_role": "Role name",
            "ttask_assesment_org": "Org name",
            "ttask_assesment_user": "supervizor()",
            "ttask_assesment_hierarchy": "",
            "ttask_assesment_method": "",
            "ttask_duty": "",
            "ttask_calc_count": 10,
            "meta": { "href": "/template-task/1211" }
        }  


## User [/users]

### List All Users [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/processes" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/processes?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "user_status": "A",
                    "user_name": "TMANN",
                    "user_first_name": "Thomas",
                    "user_last_name": "Mann",
                    "user_email": "thomas@mann.com",
                    "meta": { "href": "/users/1211" }
                }
            ]
        }
  
### List Users of Organization Unit [GET /users/organization/{orgstrId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "total_count": "84",
            "meta": { "href" : "/users/organization/{orgstrId}" },
            "completed_in": 21,
            "previous": null,
            "next": { "meta": { "href": "/users/organization/{orgstrId}?offset=20&amp;limit=10"} },
            "items": [
                {
                    "id": "1",
                    "user_status": "A",
                    "user_name": "TMANN",
                    "user_first_name": "Thomas",
                    "user_last_name": "Mann",
                    "user_email": "thomas@mann.com",
                    "meta": { "href": "/users/1211" }
                }
            ]
        }
        
### Get User [GET /users/{userId}]

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 1
            "user_email": "thomas@mann.cz",
            "user_first´_name": "Thomas",
            "user_last_name": "Mann",
            "user_name": "TMANN",
            "user_status": "A",
            "meta": { "href": "/users/{userId}" }
        }
        
        
        
### Get org.structure [GET /org-structure]

+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/org-structure" },
            "items": [
                { 
                    "label": "CPM",
                    "id": 2,
                    "manager_name": null,
                    "manager_user_id": null,
                    "children": []
                },
                {
                    "label": "External", 
                    "id": 3,
                    "manager_name": null,
                    "manager_user_id": null,
                    "children": [
                        {"label": "Teura", "id": 4, "manager_name": null, "manager_user_id": null}
                    ]
                },
                {
                    "label": "Head", 
                    "id": 5,
                    "manager_name": "Thomas Mann",
                    "manager_user_id": 22,
                    "children": [
                        {"label": "BI/DWH", "id": 6, "manager_name": null, "manager_user_id": null},
                        {"label": "Business processes", "id": 7, "manager_name": null, "manager_user_id": null},
                        {"label": "Sales", "id": 8, "manager_name": null, "manager_user_id": null},
                        {"label": "Testing", "id": 9, "manager_name": null, "manager_user_id": null},
                        {"label": "Development", "id": 10, "manager_name": null, "manager_user_id": null}
                    ]
                },
                {
                    "label": "Support", 
                    "id": 12,
                    "children": [
                        {"label": "Internal", "id": 13, "manager_name": null, "manager_user_id": null},
                        {"label": "External", "id": 14, "manager_name": null, "manager_user_id": null}
                    ]
                }
            ]
        }

        
## Plan [/plans]
### List All Plans [GET]
        
+ Response 200 (application/json; charset=utf-8)

        {
            "meta": { "href" : "/plans" },
            "completed_in": 21,
            "items": [
                {
                    "id": 1,
                    "pln_status": "A",
                    "pln_name": "Plan name",
                    "tproc_name": "Template process name",
                    "user_full_name": "Thomas Mann",
                    "pln_repeat_offset_type": "",
                    "pln_repeat_offset": "",
                    "meta": { "href": "/plan/1211" }
                }
            ]
        }
    
## Settings [/settings]
### Settings of Logged User [GET]       

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/settings" },
            "completed_in": 21,
            "items": [
                {
                    "id": 1,
                    "usrpar_name": "MAIL_TOTAL",
                    "usrpar_value": "Y"
                }
            ]
        }    
## Roles  [/roles]
### List All Roles [GET /roles/{roleId}]      

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/roles" },
            "completed_in": 21,
            "items": [
                {
                    "id": 23,
                    "role_name": "Dashboard",
                    "role_is_deleted": "N",
                    "role_note": "Some role description",
                    "meta": {
                        "href": "/roles/23"
                    }
                }
          

### Structure of roles [GET /roles/structure]      

+ Response 200 (application/json; charset=utf-8)  

        {
            "meta": { "href" : "/roles/structure" },
            "items": [
                {
                    "FolderName": [
                        {
                            "id": 23,
                            "role_name": "Dashboard",
                            "role_is_deleted": "N",
                            "role_note": "Some role description",
                            "meta": {
                                "href": "/roles/23"
                            }
                        }
                    ]
                }
            ]
        }  
    
    
        